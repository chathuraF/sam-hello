AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Proxy Import
  
Globals:
  Function:
    Timeout: 5
    Environment:
      Variables:
        ENV_NAME: !Ref Environment

Parameters:
  Environment:
    Type: String
    Default: qa
    AllowedValues:
      - dev
      - qa
      - uat
      - prod
    Description: Application development environments for sam.

Resources:
  LambdaVpcExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: lambdaVpcConfig
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
            Resource: "*"

  ZipMoneyDynamoDBExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: lambdaPolicyDynamoDB
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource: "*"
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
        # -
        #   PolicyName: lambdaVpcConfig
        #   PolicyDocument:
        #     Version: '2012-10-17'
        #     Statement:
        #       - Effect: Allow
        #         Action:
        #         - logs:CreateLogGroup
        #         - logs:CreateLogStream
        #         - logs:PutLogEvents
        #         - ec2:CreateNetworkInterface
        #         - ec2:DescribeNetworkInterfaces
        #         - ec2:DeleteNetworkInterface
        #         Resource: "*"

  HelloWorldFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt [ ZipMoneyDynamoDBExecutionRole, Arn ]
      Policies: !GetAtt [ LambdaVpcExecutionPolicy, Arn ] 
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs8.10
      #FunctionName: !Join [ '-', [ 'payment-test-chat' , Fn::ImportValue: expMyVpc] ]
      #FunctionName: Fn::ImportValue: !Sub "sub-VPCID"
      FunctionName: Hello-world-July
        #  Fn::ImportValue:
        #    Fn::Sub: 'pre-stack-VPCID'
      VpcConfig:
        SecurityGroupIds: 
          - Fn::ImportValue:
             Fn::Sub: 'pre-stack-SECGROUP'
        SubnetIds: 
          - Fn::ImportValue:
             Fn::Sub: 'pre-stack-SUBNET'
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
      Environment:
        Variables:
          ENV_NAME: !Ref Environment
          #REGION: !FindInMap [ EnvMappings, !Ref Environment, region ]