AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Proxy Import
  
Globals:
  Function:
    Timeout: 5
    Environment:
      Variables:
        ENV_NAME: !Ref Environment
    VpcConfig:
      SecurityGroupIds: 
        - Fn::ImportValue:
            Fn::Sub: 'payment-services-proxy-SecurityGroup'
      SubnetIds: 
        - Fn::ImportValue:
            Fn::Sub: 'payment-services-proxy-PrivateSubnetZoneAId'
        - Fn::ImportValue:
            Fn::Sub: 'payment-services-proxy-PrivateSubnetZoneBId'

Parameters:
  Environment:
    Type: String
    Default: qa
    AllowedValues:
      - dev
      - qa
      - uat
      - prod
    Description: Application development environments for sam.

Resources:
  ZipMoneyDynamoDBExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: lambdaPolicyDynamoDB
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource: "*"
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
        -
          PolicyName: lambdaVpcConfig
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - ec2:CreateNetworkInterface
                - ec2:DescribeNetworkInterfaces
                - ec2:DeleteNetworkInterface
                Resource: "*"

  HelloWorldFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt [ ZipMoneyDynamoDBExecutionRole, Arn ]
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs8.10
      FunctionName: Hello-world-July
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
      Environment:
        Variables:
          ENV_NAME: !Ref Environment
          #REGION: !FindInMap [ EnvMappings, !Ref Environment, region ]